{"version":3,"file":"static/js/907.6dd7dd77.chunk.js","mappings":"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","sources":["components/active-learn/ProgramContext.js","layouts/Menu.js","components/common/Menu.js","components/common/FileBrowser.js","components/active-learn/List.js","layouts/Frame.js","pages/BMSelector.js"],"sourcesContent":["import {createContext, useContext, useState} from 'react';\n\nconst ProgramContext = createContext();\n\n/* 프로그램 컨텍스트 적용 범위 설정용 제공자. */\nfunction ProgramContextProvider({children}) {\n  const [benchmarkId, setBenchmarkId] = useState(null);\n  const [variableId, setVariableId] = useState(null);\n\n  return (\n    <ProgramContext.Provider value={{\n        benchmarkId, setBenchmarkId,\n        variableId, setVariableId}}>\n      {children}\n    </ProgramContext.Provider>\n  );\n}\n\n/* 프로그램 컨텍스트 사용. 제공자 태그 밖에서 사용하면 무효. */\nfunction useProgramContext() {\n  const value = useContext(ProgramContext);\n  if (value === undefined) {\n    throw new Error('프로그램 컨텍스트를 제공하지 않는 태그입니다.');\n  }\n  return value;\n}\n\nexport {ProgramContextProvider, useProgramContext};","import {AppBar, MenuList, MenuItem, Typography} from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst Container = styled(AppBar)({\n  position: 'fixed',\n  backgroundColor: 'skyblue',\n  borderBottom: '2px gray solid',\n  fontFamily: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif',\n});\n\nconst Title = styled(Typography)({\n  padding: '8px',\n});\n\nconst Bar = styled(MenuList)({\n  padding: 0,\n});\n\nconst Button = styled(MenuItem)({\n  display: 'inline-flex',\n  padding: '4px 16px 4px 16px',\n  fontSize: '14px',\n});\n\nexport {Container, Title, Bar, Button};","import {useProgramContext} from '../active-learn/ProgramContext';\nimport {Bar, Button, Container, Title} from '../../layouts/Menu';\n\nfunction FileButton({name}) {\n  /* Todo: 파일 메뉴 기능 추가. */\n  return(\n    <Button disabled>{name}</Button>\n  );\n};\n\nfunction ViewButton({name}) {\n  /* Todo: 보기 메뉴 기능 추가. */\n  return(\n    <Button disabled>{name}</Button>\n  );\n};\n\nfunction LanguageButton({name}) {\n  /* Todo: 언어 메뉴 기능 추가. */\n  return(\n    <Button disabled>{name}</Button>\n  );\n};\n\nfunction RunButton({name}) {\n  /* 선택한 벤치마크 ID, 변수 ID. */\n  const {benchmarkId, variableId} = useProgramContext();\n\n  /* 버튼 클릭 시 동작. */\n  const onClick = () => {\n    /* 벤치마크, 변수를 선택하면 수행. */\n    if (benchmarkId && variableId) {\n      /* Todo: 능동학습 수행 페이지로 이동. */\n      console.log('선택한 벤치마크:', benchmarkId, variableId);\n    }\n  };\n\n  return (\n    <Button onClick={onClick}>{name}</Button>\n  );\n}\n\nfunction HeaderSimpleMenu({name}) {\n  return (\n    <Container>\n      <Title>{name}</Title>\n      <Bar>\n        <FileButton name='파일'/>\n        <ViewButton name='보기'/>\n        <LanguageButton name='언어'/>\n      </Bar>\n    </Container>\n  );\n}\n\nfunction FooterSelectMenu() {\n  return(\n    <Container sx={{top: 'auto', bottom: 0}}>\n      <Bar>\n        <RunButton name='능동학습 수행'/>\n      </Bar>\n    </Container>\n  );\n}\n\nexport {HeaderSimpleMenu, FooterSelectMenu};","import {Client} from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nlet url = 'https://localhost:15535/ws';\nlet topic_direct_folder = '/topic/dir-folder';\nlet dest_end_point = '/fs';\n\nclass FileBrowser {\n  constructor(socket) {\n    this.socket = socket;\n    this.stomp = null;\n  }\n\n  /* STOMP 웹 소켓 통신 연결. */\n  connect() {\n    return new Promise((resolve, reject) => {\n      this.stomp = new Client({\n        webSocketFactory: () => this.socket,\n        onConnect: () => {\n          console.log('서버 연결 성공');\n          resolve();\n        },\n        onError: (frame) => {\n          console.error('서버 연결 실패', frame);\n          reject(new Error(frame.headers['message']));\n        },\n        /* 콘솔 출력 디버그용. */\n        // debug: (msg) => console.log(msg),\n      });\n      this.stomp.activate();\n    }); \n  }\n\n  /* STOMP 웹 소켓 통신 종료. */\n  disconnected() {\n    if (this.stomp) {\n      console.log('서버 연결 종료');\n      this.stomp.deactivate();\n    }\n  }\n  \n  /* 서버로 경로 정보 전달. */\n  getMessage(topic, path) {\n    return new Promise(async (resolve, reject) => {\n      if (!this.stomp || !this.stomp.connected) {\n        try {\n          await this.connect();\n        } catch (err) {\n          return reject(err);\n        }\n      }\n\n      /* topic 구독. */\n      const subscription = this.stomp.subscribe(topic, (msg) => {\n        console.log(dest_end_point, topic, '수신');\n        if (msg.body) {\n          const results = JSON.parse(msg.body);\n          resolve(results);\n          subscription.unsubscribe();\n        }\n      });\n\n      /* 엔드 포인트 /fs로 정보 전송. */\n      this.stomp.publish({\n        destination: dest_end_point,\n        body: JSON.stringify({path: path}),\n      });\n      console.log(dest_end_point, topic, '전송');\n    });\n  }\n}\n\nasync function getDirectFolders(path) {\n  const socket = new SockJS(url);\n  const browser = new FileBrowser(socket);\n  console.log('직접 하위 폴더 탐색 요청');\n\n  try {\n    const result = await browser.getMessage(topic_direct_folder, path);\n    return (result.folder) ? result.folder : [];\n  } catch (err) {\n    console.err('파일 탐색기 오류:', err);\n    return [];\n  } finally {\n    browser.disconnected();\n  }\n}\n\nexport {getDirectFolders};","import {useEffect, useState} from 'react';\nimport {List, ListItemButton, ListSubheader} from \"@mui/material\";\nimport {useProgramContext} from './ProgramContext';\nimport {getDirectFolders} from '../common/FileBrowser';\n\nlet benchmark_source_path = '/home/shared';\n\nfunction BenchmarkList({name}) {\n  /* 선택한 벤치마크 ID, 초기화할 변수 ID. */\n  const {benchmarkId, setBenchmarkId, setVariableId} = useProgramContext();\n\n  /* 컴포넌트 마운트 시 수행 동작. 벤치마크 폴더 불러오기. */\n  const [contents, setContents] = useState([]);\n  useEffect(() => {\n    getDirectFolders(benchmark_source_path).then((result) => {\n      setContents(result);\n    }).catch(e => {\n      setContents([]);\n    });\n  }, []);\n\n  /* 클릭한 벤치마크로 ID 변경. */\n  const onClick = (e, id) => {\n    setBenchmarkId(id);\n    setVariableId(null);\n  };\n\n  /* 연속 리스트 버튼 생성. */\n  const nameList = contents.map((name) =>\n    <ListItemButton key={name}\n      selected={benchmarkId === name}\n      onClick={(e) => onClick(e, name)}>\n      {name}\n    </ListItemButton>\n  );\n\n  return(\n    <List sx={{padding:'0px', width: '100%', overflowY: 'auto'}}>\n      <ListSubheader>{name}</ListSubheader>\n      {nameList}\n    </List>\n  );\n}\n\nfunction VariableList({name}) {\n  /* 선택한 벤치마크 ID, 변수 ID. */\n  const {benchmarkId, variableId, setVariableId} = useProgramContext();\n\n  /* 벤치마크 ID 변화 시 수행 동작. 벤치마크 하위 폴더 불러오기. */\n  const [contents, setContents] = useState([]);\n  useEffect(() => {\n    if (benchmarkId) {\n      let benchmark_path = benchmark_source_path + '/' + benchmarkId;\n      getDirectFolders(benchmark_path).then((result) => {\n        setContents(result);\n      }).catch(e => {\n        setContents([]);\n      });\n    }\n  }, [benchmarkId]);\n\n  /* 클릭한 벤치마크로 ID 변경. */\n  const onClick = (e, id) => {\n    setVariableId(id);\n  };\n\n  /* 연속 리스트 버튼 생성. */\n  const nameList = contents.map((name) =>\n    <ListItemButton key={name}\n      selected={variableId === name}\n      onClick={(e) => onClick(e, name)}>\n      {name}\n    </ListItemButton>\n  );\n\n  return(\n    <List sx={{padding:'0px', width: '100%', overflowY: 'auto'}}>\n      <ListSubheader>{name}</ListSubheader>\n      {nameList}\n    </List>\n  );\n}\n\nexport {BenchmarkList, VariableList};","import {Box} from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst Frame = styled(Box)({\n  maxHeight: '100vh',\n  padding: '72px 0px 28px 0px',\n  fontFamily: \"system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\n});\n\nconst Container = styled(Box)({\n  display: 'flex',\n});\n\nexport {Frame, Container};","import {HeaderSimpleMenu, FooterSelectMenu} from '../components/common/Menu';\nimport {BenchmarkList, VariableList} from '../components/active-learn/List';\nimport {ProgramContextProvider} from '../components/active-learn/ProgramContext';\nimport {Frame, Container} from '../layouts/Frame';\n\nexport default function BMSelector() {\n  let conWidth = `calc(100vw - 500px)`;\n  let conHeight = `calc(100vh - 120px)`;\n\n  return(\n    <Frame>\n      <ProgramContextProvider>\n        <HeaderSimpleMenu name='능동학습 시작'/>\n        <Container gap='16px' minHeight={conHeight} overflow='hidden'>\n            <Container width='480px' maxHeight={conHeight} bgcolor='whitesmoke'>\n              <BenchmarkList name='벤치마크 예제 선택'/>\n            </Container>\n            <Container width={conWidth} maxHeight={conHeight} bgcolor='whitesmoke'>\n              <VariableList name='관심 변수 선택'/>\n            </Container>\n        </Container>\n        <FooterSelectMenu/>\n      </ProgramContextProvider>\n    </Frame>\n  );\n}"],"names":["ProgramContext","createContext","ProgramContextProvider","_ref","children","benchmarkId","setBenchmarkId","useState","variableId","setVariableId","_jsx","Provider","value","useProgramContext","useContext","undefined","Error","Container","styled","AppBar","position","backgroundColor","borderBottom","fontFamily","Title","Typography","padding","Bar","MenuList","Button","MenuItem","display","fontSize","FileButton","name","disabled","ViewButton","_ref2","LanguageButton","_ref3","RunButton","_ref4","onClick","console","log","HeaderSimpleMenu","_ref5","_jsxs","FooterSelectMenu","sx","top","bottom","url","topic_direct_folder","dest_end_point","FileBrowser","constructor","socket","this","stomp","connect","Promise","resolve","reject","Client","webSocketFactory","onConnect","onError","frame","error","headers","activate","disconnected","deactivate","getMessage","topic","path","async","connected","err","subscription","subscribe","msg","body","results","JSON","parse","unsubscribe","publish","destination","stringify","getDirectFolders","SockJS","browser","result","folder","benchmark_source_path","BenchmarkList","contents","setContents","useEffect","then","catch","e","nameList","map","ListItemButton","selected","List","width","overflowY","ListSubheader","VariableList","Frame","Box","maxHeight","BMSelector","conHeight","gap","minHeight","overflow","bgcolor"],"sourceRoot":""}