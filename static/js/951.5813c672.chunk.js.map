{"version":3,"file":"static/js/951.5813c672.chunk.js","mappings":"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","sources":["components/active-learn/ProgramContext.js","layouts/Menu.js","components/common/Menu.js","components/common/FileFetcher.js","components/common/FileBrowser.js","components/active-learn/BenchmarkBrowser.js","components/active-learn/Description.js","layouts/Frame.js","pages/BMSelector.js"],"sourcesContent":["import {createContext, useContext, useState} from 'react';\n\nconst ProgramContext = createContext();\n\n/* 프로그램 컨텍스트 적용 범위 설정용 제공자. */\nfunction ProgramContextProvider({children}) {\n  const [benchmarkPath, setBenchmarkPath] = useState(null);\n  const [benchmarkDesc, setBenchmarkDesc] = useState(null);\n\n  return (\n    <ProgramContext.Provider value={{\n        benchmarkPath, setBenchmarkPath,\n        benchmarkDesc, setBenchmarkDesc}}>\n      {children}\n    </ProgramContext.Provider>\n  );\n}\n\n/* 프로그램 컨텍스트 사용. 제공자 태그 밖에서 사용하면 무효. */\nfunction useProgramContext() {\n  const value = useContext(ProgramContext);\n  if (value === undefined) {\n    throw new Error('프로그램 컨텍스트를 제공하지 않는 태그입니다.');\n  }\n  return value;\n}\n\nexport {ProgramContextProvider, useProgramContext};","import {AppBar, MenuList, MenuItem, Typography} from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst Container = styled(AppBar)({\n  position: 'fixed',\n  backgroundColor: 'skyblue',\n  borderBottom: '2px gray solid',\n  fontFamily: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif',\n});\n\nconst Title = styled(Typography)({\n  padding: '8px',\n});\n\nconst Bar = styled(MenuList)({\n  padding: 0,\n});\n\nconst Button = styled(MenuItem)({\n  display: 'inline-flex',\n  padding: '4px 16px 4px 16px',\n  fontSize: '14px',\n});\n\nexport {Container, Title, Bar, Button};","import {useProgramContext} from '../active-learn/ProgramContext';\nimport {Bar, Button, Container, Title} from '../../layouts/Menu';\n\nfunction FileButton({name}) {\n  /* Todo: 파일 메뉴 기능 추가. */\n  return(\n    <Button disabled>{name}</Button>\n  );\n};\n\nfunction ViewButton({name}) {\n  /* Todo: 보기 메뉴 기능 추가. */\n  return(\n    <Button disabled>{name}</Button>\n  );\n};\n\nfunction LanguageButton({name}) {\n  /* Todo: 언어 메뉴 기능 추가. */\n  return(\n    <Button disabled>{name}</Button>\n  );\n};\n\nfunction RunButton({name}) {\n  /* 선택한 벤치마크 ID, 변수 ID. */\n  const {benchmarkId, variableId} = useProgramContext();\n\n  /* 버튼 클릭 시 동작. */\n  const onClick = () => {\n    /* 벤치마크, 변수를 선택하면 수행. */\n    if (benchmarkId && variableId) {\n      /* Todo: 능동학습 수행 페이지로 이동. */\n      console.log('선택한 벤치마크:', benchmarkId, variableId);\n    }\n  };\n\n  return (\n    <Button onClick={onClick}>{name}</Button>\n  );\n}\n\nfunction HeaderSimpleMenu({name}) {\n  return (\n    <Container>\n      <Title>{name}</Title>\n      <Bar>\n        <FileButton name='파일'/>\n        <ViewButton name='보기'/>\n        <LanguageButton name='언어'/>\n      </Bar>\n    </Container>\n  );\n}\n\nfunction FooterSelectMenu() {\n  return(\n    <Container sx={{top: 'auto', bottom: 0}}>\n      <Bar>\n        <RunButton name='능동학습 수행'/>\n      </Bar>\n    </Container>\n  );\n}\n\nexport {HeaderSimpleMenu, FooterSelectMenu};","import {Client} from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nlet url = 'https://localhost:15535/ws';\nlet topic_fs = '/fs';\nlet dest_fs_dir_folder = '/fs/dir-folder';\nlet dest_fs_json_file = '/fs/json-file';\n\nclass FileFetcher {\n  constructor(socket) {\n    this.socket = socket;\n    this.stomp = null;\n  }\n\n  /* STOMP 웹 소켓 통신 연결. */\n  connect() {\n    return new Promise((resolve, reject) => {\n      this.stomp = new Client({\n        webSocketFactory: () => this.socket,\n        onConnect: () => {\n          console.log('서버 연결 성공');\n          resolve();\n        },\n        onError: (frame) => {\n          console.error('서버 연결 실패', frame);\n          reject(new Error(frame.headers['message']));\n        },\n        /* 콘솔 출력 디버그용. */\n        // debug: (msg) => console.log(msg),\n      });\n      this.stomp.activate();\n    }); \n  }\n\n  /* STOMP 웹 소켓 통신 종료. */\n  disconnected() {\n    if (this.stomp) {\n      console.log('서버 연결 종료');\n      this.stomp.deactivate();\n    }\n  }\n  \n  /* 서버로 경로 정보 전달. */\n  getMessage(topic, dest, path) {\n    return new Promise(async (resolve, reject) => {\n      if (!this.stomp || !this.stomp.connected) {\n        try {\n          await this.connect();\n        } catch (err) {\n          return reject(err);\n        }\n      }\n\n      /* topic 구독. */\n      const subscription = this.stomp.subscribe(topic, (msg) => {\n        console.log(topic, dest, '수신');\n        if (msg.body) {\n          const results = JSON.parse(msg.body);\n          resolve(results);\n          subscription.unsubscribe();\n        }\n      });\n\n      /* 엔드 포인트 /fs로 정보 전송. */\n      this.stomp.publish({\n        destination: dest,\n        body: JSON.stringify({path: path}),\n      });\n      console.log(topic, dest, '전송');\n    });\n  }\n}\n\nasync function getDirectFolders(path) {\n  const socket = new SockJS(url);\n  const browser = new FileFetcher(socket);\n  console.log('직접 하위 폴더 탐색 요청');\n\n  try {\n    const result = await browser.getMessage(topic_fs, dest_fs_dir_folder, path);\n    return (result.folder) ? result.folder : [];\n  } catch (err) {\n    console.err('파일 탐색기 오류:', err);\n    return [];\n  } finally {\n    browser.disconnected();\n  }\n}\n\nasync function getJsonFile(path) {\n  const socket = new SockJS(url);\n  const browser = new FileFetcher(socket);\n  console.log('특정 Json 파일 탐색 요청');\n\n  try {\n    const result = await browser.getMessage(topic_fs, dest_fs_json_file, path);\n    return result;\n  } catch (err) {\n    console.err('파일 탐색기 오류:', err);\n    return null;\n  } finally {\n    browser.disconnected();\n  }\n}\n\nexport {getDirectFolders, getJsonFile};","import {useEffect, useState} from 'react';\nimport {List, ListItemButton, ListSubheader} from \"@mui/material\";\nimport {getDirectFolders, getJsonFile} from '../common/FileFetcher';\n\n/* 상위 폴더 경로. */\nlet parent_path = '..';\nlet meta_path = 'meta.json';\nlet is_runnable = 'isRunnable';\n\nfunction FolderBrowser({title, root, setTarget}) {\n  /* 컴포넌트 마운트 시 수행 동작. 하위 폴더 불러오기. */\n  const [path, setPath] = useState([]);\n  const [contents, setContents] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    let wd_path = [root, ...path].join('/');\n    getDirectFolders(wd_path).then((result) => {\n      if (path.length > 0) {\n        setContents([parent_path, ...result]);\n      } else {\n        setContents(result);\n      }\n    }).catch(e => {\n      if (path.length > 0) {\n        setContents([parent_path]);\n      } else {\n        setContents([]);\n      }\n    }).finally(e => {\n      /* 대기 상태 종료. */\n      setLoading(false);\n      setTarget(null);\n    });\n  }, [path]);\n\n  /* 클릭 폴더 설정. */\n  const onClick = (e, id) => {\n    if (id === parent_path) {\n      setTarget(null);\n    } else {\n      setTarget([root, ...path, id].join('/'));\n    }\n  };\n\n  /* 현재 폴더 경로 변경. */\n  const onDoubleClick = (e, id) => {\n    if (loading === false) {\n      if (id === parent_path) {\n        setPath(path.slice(0, -1));\n        setLoading(true);\n      } else {\n        let wd_meta_path = [root, ...path, id, meta_path].join('/');\n        getJsonFile(wd_meta_path).then((result) => {\n          if (result.hasOwnProperty(is_runnable)) {\n            if (result.isRunnable === false) {   \n              setPath([...path, id]);\n              setLoading(true);\n            }\n          }\n        });\n      }\n    }\n  }\n\n  /* 연속 리스트 버튼 생성. */\n  const nameList = contents.map((name) =>\n    <ListItemButton key={name}\n      selected={path === name}\n      onClick={(e) => onClick(e, name)}\n      onDoubleClick={(e) => onDoubleClick(e, name)}>\n      {name}\n    </ListItemButton>\n  );\n\n  return(\n    <List sx={{padding:'0px', width: '100%', overflowY: 'auto'}}>\n      <ListSubheader>{title}</ListSubheader>\n      {nameList}\n    </List>\n  );\n}\n\nexport {FolderBrowser};","import {useEffect} from 'react';\nimport {useProgramContext} from './ProgramContext';\nimport {FolderBrowser} from '../common/FileBrowser';\n\nfunction BenchmarkBrowser() {\n  /* 선택한 경로, 벤치마크 ID. */\n  const {setBenchmarkPath} = useProgramContext();\n\n  /* 벤치마크 모음 폴더 경로. */\n  let benchmark_source_path = '/home/shared/AL_benchmark';\n\n  return(\n    <FolderBrowser title='벤치마크 선택'\n      root={benchmark_source_path}\n      setTarget={setBenchmarkPath}/>\n  );\n}\n\nexport {BenchmarkBrowser};","import {useEffect} from 'react';\nimport {getJsonFile} from '../common/FileFetcher';\nimport {useProgramContext} from './ProgramContext';\n\nfunction BenchmarkDescription() {\n  /* 선택한 벤치마크 설명. */\n  const {benchmarkPath, benchmarkDesc, setBenchmarkDesc} = useProgramContext();\n\n  useEffect(() => {\n    /* 벤치마크 모음 폴더 경로. */\n    let meta = 'meta.json';\n    let meta_path = [benchmarkPath, meta].join('/');\n\n    if (benchmarkPath !== null) {\n      getJsonFile(meta_path).then((result) => {\n        setBenchmarkDesc(result.description);\n      }).catch(e => {\n        setBenchmarkDesc(null);\n      });\n    } else {\n      setBenchmarkDesc(null);\n    }\n  }, [benchmarkPath]);\n\n  return benchmarkDesc;\n}\n\nexport {BenchmarkDescription};","import {Box} from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst Frame = styled(Box)({\n  maxHeight: '100vh',\n  padding: '72px 0px 28px 0px',\n  fontFamily: \"system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\n});\n\nconst Container = styled(Box)({\n  display: 'flex',\n});\n\nexport {Frame, Container};","import {HeaderSimpleMenu, FooterSelectMenu} from '../components/common/Menu';\nimport {BenchmarkBrowser} from '../components/active-learn/BenchmarkBrowser';\nimport {BenchmarkDescription} from '../components/active-learn/Description';\nimport {ProgramContextProvider} from '../components/active-learn/ProgramContext';\nimport {Frame, Container} from '../layouts/Frame';\n\nexport default function BMSelector() {\n  let conWidth = `calc(100vw - 16px)`;\n  let conHeight = `calc(100vh - 252px)`;\n\n  return(\n    <Frame>\n      <ProgramContextProvider>\n        <HeaderSimpleMenu name='능동학습 시작'/>\n        <Container minWidth={conWidth} minHeight={conHeight}>\n          <Container minWidth={conWidth} maxHeight={conHeight} bgcolor='whitesmoke' overflow='hidden'>\n            <BenchmarkBrowser title='벤치마크 예제 선택'/>\n          </Container>\n        </Container>\n        <Container paddingTop='8px' minWidth={conWidth} minHeight='128px'>\n          <Container minWidth={conWidth} maxHeight='128px' bgcolor='whitesmoke' overflow='hidden'>\n            <BenchmarkDescription/>\n          </Container>\n        </Container>\n        <FooterSelectMenu/>\n      </ProgramContextProvider>\n    </Frame>\n  );\n}"],"names":["ProgramContext","createContext","ProgramContextProvider","_ref","children","benchmarkPath","setBenchmarkPath","useState","benchmarkDesc","setBenchmarkDesc","_jsx","Provider","value","useProgramContext","useContext","undefined","Error","Container","styled","AppBar","position","backgroundColor","borderBottom","fontFamily","Title","Typography","padding","Bar","MenuList","Button","MenuItem","display","fontSize","FileButton","name","disabled","ViewButton","_ref2","LanguageButton","_ref3","RunButton","_ref4","benchmarkId","variableId","onClick","console","log","HeaderSimpleMenu","_ref5","_jsxs","FooterSelectMenu","sx","top","bottom","url","topic_fs","dest_fs_dir_folder","dest_fs_json_file","FileFetcher","constructor","socket","this","stomp","connect","Promise","resolve","reject","Client","webSocketFactory","onConnect","onError","frame","error","headers","activate","disconnected","deactivate","getMessage","topic","dest","path","async","connected","err","subscription","subscribe","msg","body","results","JSON","parse","unsubscribe","publish","destination","stringify","getJsonFile","SockJS","browser","parent_path","meta_path","is_runnable","FolderBrowser","title","root","setTarget","setPath","contents","setContents","loading","setLoading","useEffect","result","folder","getDirectFolders","join","then","length","catch","e","finally","nameList","map","ListItemButton","selected","id","onDoubleClick","slice","hasOwnProperty","isRunnable","List","width","overflowY","ListSubheader","BenchmarkBrowser","BenchmarkDescription","description","Frame","Box","maxHeight","BMSelector","conWidth","conHeight","minWidth","minHeight","bgcolor","overflow","paddingTop"],"sourceRoot":""}