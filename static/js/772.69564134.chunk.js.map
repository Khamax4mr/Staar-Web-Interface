{"version":3,"file":"static/js/772.69564134.chunk.js","mappings":"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","sources":["components/common/FileBrowser.js","components/active-learn/BenchmarkBrowser.js","components/active-learn/Description.js","components/active-learn/ProgramContext.js","components/common/FileFetcher.js","layouts/Menu.js","components/common/Menu.js","layouts/Frame.js","pages/ALRunner.js"],"sourcesContent":["import {useEffect, useState} from 'react';\nimport {List, ListItemButton, ListSubheader} from \"@mui/material\";\nimport {getDirectFolders, getJsonFile} from '../common/FileFetcher';\n\n/* 상위 폴더 경로. */\nlet parent_path = '..';\nlet meta_path = 'meta.json';\nlet is_runnable = 'isRunnable';\n\nfunction FolderBrowser({title, root, id, setId, setTarget}) {\n  /* 컴포넌트 마운트 시 수행 동작. 하위 폴더 불러오기. */\n  const [path, setPath] = useState([]);\n  const [contents, setContents] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    let wd_path = [root, ...path].join('/');\n    getDirectFolders(wd_path).then((result) => {\n      if (path.length > 0) {\n        setContents([parent_path, ...result]);\n      } else {\n        setContents(result);\n      }\n    }).catch(e => {\n      if (path.length > 0) {\n        setContents([parent_path]);\n      } else {\n        setContents([]);\n      }\n    }).finally(e => {\n      /* 대기 상태 종료. */\n      setLoading(false);\n      setId(null);\n      setTarget(null);\n    });\n  }, [path]);\n\n  /* 클릭 폴더 설정. */\n  const onClick = (e, id) => {\n    if (id === parent_path) {\n      setId(null);\n      setTarget(null);\n    } else {\n      setId(id);\n      setTarget([root, ...path, id].join('/'));\n    }\n  };\n\n  /* 현재 폴더 경로 변경. */\n  const onDoubleClick = (e, id) => {\n    if (loading === false) {\n      if (id === parent_path) {\n        setPath(path.slice(0, -1));\n        setLoading(true);\n      } else {\n        let wd_meta_path = [root, ...path, id, meta_path].join('/');\n        getJsonFile(wd_meta_path).then((result) => {\n          if (result.hasOwnProperty(is_runnable)) {\n            if (result.isRunnable === false) {   \n              setPath([...path, id]);\n              setLoading(true);\n            }\n          }\n        });\n      }\n    }\n  }\n\n  /* 연속 리스트 버튼 생성. */\n  const nameList = contents.map((name) =>\n    <ListItemButton key={name}\n      selected={id === name}\n      onClick={(e) => onClick(e, name)}\n      onDoubleClick={(e) => onDoubleClick(e, name)}>\n      {name}\n    </ListItemButton>\n  );\n\n  return(\n    <List sx={{padding:'0px', width: '100%', overflowY: 'auto'}}>\n      <ListSubheader>{title}</ListSubheader>\n      {nameList}\n    </List>\n  );\n}\n\nexport {FolderBrowser};","import {useEffect} from 'react';\nimport {useProgramContext} from './ProgramContext';\nimport {FolderBrowser} from '../common/FileBrowser';\n\nfunction BenchmarkBrowser() {\n  /* 선택한 경로, 벤치마크 ID. */\n  const {benchmarkId, setBenchmarkId, setBenchmarkPath} = useProgramContext();\n\n  /* 벤치마크 모음 폴더 경로. */\n  let benchmark_source_path = '/home/shared/AL_benchmark';\n\n  return(\n    <FolderBrowser title='벤치마크 선택'\n      root={benchmark_source_path}\n      id={benchmarkId}\n      setId={setBenchmarkId}\n      setTarget={setBenchmarkPath}/>\n  );\n}\n\nexport {BenchmarkBrowser};","import {useEffect} from 'react';\nimport {getJsonFile} from '../common/FileFetcher';\nimport {useProgramContext} from './ProgramContext';\n\nfunction BenchmarkDescription() {\n  /* 선택한 벤치마크 설명. */\n  const {benchmarkPath, benchmarkDesc, setBenchmarkDesc} = useProgramContext();\n\n  useEffect(() => {\n    /* 벤치마크 모음 폴더 경로. */\n    let meta = 'meta.json';\n    let meta_path = [benchmarkPath, meta].join('/');\n\n    if (benchmarkPath !== null) {\n      getJsonFile(meta_path).then((result) => {\n        setBenchmarkDesc(result.description);\n      }).catch(e => {\n        setBenchmarkDesc(null);\n      });\n    } else {\n      setBenchmarkDesc(null);\n    }\n  }, [benchmarkPath]);\n\n  return benchmarkDesc;\n}\n\nexport {BenchmarkDescription};","import {createContext, useContext, useState} from 'react';\n\nconst ProgramContext = createContext();\n\n/* 프로그램 컨텍스트 적용 범위 설정용 제공자. */\nfunction ProgramContextProvider({children}) {\n  const [benchmarkId, setBenchmarkId] = useState(null);\n  const [benchmarkPath, setBenchmarkPath] = useState(null);\n  const [benchmarkDesc, setBenchmarkDesc] = useState(null);\n\n  return (\n    <ProgramContext.Provider value={{\n        benchmarkId, setBenchmarkId,\n        benchmarkPath, setBenchmarkPath,\n        benchmarkDesc, setBenchmarkDesc}}>\n      {children}\n    </ProgramContext.Provider>\n  );\n}\n\n/* 프로그램 컨텍스트 사용. 제공자 태그 밖에서 사용하면 무효. */\nfunction useProgramContext() {\n  const value = useContext(ProgramContext);\n  if (value === undefined) {\n    throw new Error('프로그램 컨텍스트를 제공하지 않는 태그입니다.');\n  }\n  return value;\n}\n\nexport {ProgramContextProvider, useProgramContext};","import {Client} from '@stomp/stompjs';\nimport SockJS from 'sockjs-client';\n\nlet url = 'https://localhost:15535/ws';\nlet topic_fs = '/fs';\nlet dest_fs_dir_folder = '/fs/dir-folder';\nlet dest_fs_json_file = '/fs/json-file';\n\nclass FileFetcher {\n  constructor(socket) {\n    this.socket = socket;\n    this.stomp = null;\n  }\n\n  /* STOMP 웹 소켓 통신 연결. */\n  connect() {\n    return new Promise((resolve, reject) => {\n      this.stomp = new Client({\n        webSocketFactory: () => this.socket,\n        onConnect: () => {\n          console.log('서버 연결 성공');\n          resolve();\n        },\n        onError: (frame) => {\n          console.error('서버 연결 실패', frame);\n          reject(new Error(frame.headers['message']));\n        },\n        /* 콘솔 출력 디버그용. */\n        // debug: (msg) => console.log(msg),\n      });\n      this.stomp.activate();\n    }); \n  }\n\n  /* STOMP 웹 소켓 통신 종료. */\n  disconnected() {\n    if (this.stomp) {\n      console.log('서버 연결 종료');\n      this.stomp.deactivate();\n    }\n  }\n  \n  /* 서버로 경로 정보 전달. */\n  getMessage(topic, dest, path) {\n    return new Promise(async (resolve, reject) => {\n      if (!this.stomp || !this.stomp.connected) {\n        try {\n          await this.connect();\n        } catch (err) {\n          return reject(err);\n        }\n      }\n\n      /* topic 구독. */\n      const subscription = this.stomp.subscribe(topic, (msg) => {\n        console.log(topic, dest, '수신');\n        if (msg.body) {\n          const results = JSON.parse(msg.body);\n          resolve(results);\n          subscription.unsubscribe();\n        }\n      });\n\n      /* 엔드 포인트 /fs로 정보 전송. */\n      this.stomp.publish({\n        destination: dest,\n        body: JSON.stringify({path: path}),\n      });\n      console.log(topic, dest, '전송');\n    });\n  }\n}\n\nasync function getDirectFolders(path) {\n  const socket = new SockJS(url);\n  const browser = new FileFetcher(socket);\n  console.log('직접 하위 폴더 탐색 요청');\n\n  try {\n    const result = await browser.getMessage(topic_fs, dest_fs_dir_folder, path);\n    return (result.folder) ? result.folder : [];\n  } catch (err) {\n    console.err('파일 탐색기 오류:', err);\n    return [];\n  } finally {\n    browser.disconnected();\n  }\n}\n\nasync function getJsonFile(path) {\n  const socket = new SockJS(url);\n  const browser = new FileFetcher(socket);\n  console.log('특정 Json 파일 탐색 요청');\n\n  try {\n    const result = await browser.getMessage(topic_fs, dest_fs_json_file, path);\n    return result;\n  } catch (err) {\n    console.err('파일 탐색기 오류:', err);\n    return null;\n  } finally {\n    browser.disconnected();\n  }\n}\n\nexport {getDirectFolders, getJsonFile};","import {AppBar, MenuList, MenuItem, Typography} from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst Container = styled(AppBar)({\n  position: 'fixed',\n  backgroundColor: 'skyblue',\n  borderBottom: '2px gray solid',\n  fontFamily: 'system-ui, -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Oxygen, Ubuntu, Cantarell, \"Open Sans\", \"Helvetica Neue\", sans-serif',\n});\n\nconst Title = styled(Typography)({\n  padding: '8px',\n});\n\nconst Bar = styled(MenuList)({\n  padding: 0,\n});\n\nconst Button = styled(MenuItem)({\n  display: 'inline-flex',\n  padding: '4px 16px 4px 16px',\n  fontSize: '14px',\n});\n\nexport {Container, Title, Bar, Button};","import {useProgramContext} from '../active-learn/ProgramContext';\nimport {Bar, Button, Container, Title} from '../../layouts/Menu';\nimport {useNavigate} from 'react-router-dom';\n\nfunction FileButton({name}) {\n  /* Todo: 파일 메뉴 기능 추가. */\n  return(\n    <Button disabled>{name}</Button>\n  );\n};\n\nfunction ViewButton({name}) {\n  /* Todo: 보기 메뉴 기능 추가. */\n  return(\n    <Button disabled>{name}</Button>\n  );\n};\n\nfunction LanguageButton({name}) {\n  /* Todo: 언어 메뉴 기능 추가. */\n  return(\n    <Button disabled>{name}</Button>\n  );\n};\n\nfunction RunButton({name}) {\n  /* 선택한 벤치마크 ID, 변수 ID. */\n  const {benchmarkId} = useProgramContext();\n\n  /* 버튼 클릭 시 동작. */\n  const onClick = () => {\n    /* 벤치마크, 변수를 선택하면 수행. */\n    if (benchmarkId) {\n      /* Todo: 능동학습 수행 페이지로 이동. */\n      console.log('선택한 벤치마크:', benchmarkId);\n    }\n  };\n\n  return (\n    <Button onClick={onClick}>{name}</Button>\n  );\n}\n\nfunction HeaderSimpleMenu({name}) {\n  return (\n    <Container>\n      <Title>{name}</Title>\n      <Bar>\n        <FileButton name='파일'/>\n        <ViewButton name='보기'/>\n        <LanguageButton name='언어'/>\n      </Bar>\n    </Container>\n  );\n}\n\nfunction FooterSelectMenu() {\n  return(\n    <Container sx={{top: 'auto', bottom: 0}}>\n      <Bar>\n        <RunButton name='능동학습 수행'/>\n      </Bar>\n    </Container>\n  );\n}\n\nexport {HeaderSimpleMenu, FooterSelectMenu};","import {Box} from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst Frame = styled(Box)({\n  maxHeight: '100vh',\n  padding: '72px 0px 28px 0px',\n  fontFamily: \"system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif\",\n});\n\nconst Container = styled(Box)({\n  display: 'flex',\n});\n\nexport {Frame, Container};","import {HeaderSimpleMenu, FooterSelectMenu} from '../components/common/Menu';\nimport {BenchmarkBrowser} from '../components/active-learn/BenchmarkBrowser';\nimport {BenchmarkDescription} from '../components/active-learn/Description';\nimport {ProgramContextProvider} from '../components/active-learn/ProgramContext';\nimport {Frame, Container} from '../layouts/Frame';\n\nexport default function BMSelector() {\n  return(\n    <Frame>\n      <ProgramContextProvider>\n        <HeaderSimpleMenu name='능동학습 실행'/>\n        {/* <Container minWidth={conWidth} minHeight={conHeight}>\n          <Container minWidth={conWidth} maxHeight={conHeight} bgcolor='whitesmoke' overflow='hidden'>\n            <BenchmarkBrowser title='벤치마크 예제 선택'/>\n          </Container>\n        </Container>\n        <Container paddingTop='8px' minWidth={conWidth} minHeight='128px'>\n          <Container minWidth={conWidth} maxHeight='128px' bgcolor='whitesmoke' overflow='hidden'>\n            <BenchmarkDescription/>\n          </Container>\n        </Container> */}\n        <FooterSelectMenu/>\n      </ProgramContextProvider>\n    </Frame>\n  );\n}"],"names":["parent_path","meta_path","is_runnable","FolderBrowser","_ref","title","root","id","setId","setTarget","path","setPath","useState","contents","setContents","loading","setLoading","useEffect","wd_path","join","getDirectFolders","then","result","length","catch","e","finally","nameList","map","name","_jsx","ListItemButton","selected","onClick","onDoubleClick","slice","wd_meta_path","getJsonFile","hasOwnProperty","isRunnable","children","_jsxs","List","sx","padding","width","overflowY","ListSubheader","BenchmarkBrowser","benchmarkId","setBenchmarkId","setBenchmarkPath","useProgramContext","BenchmarkDescription","benchmarkPath","benchmarkDesc","setBenchmarkDesc","description","ProgramContext","createContext","ProgramContextProvider","Provider","value","useContext","undefined","Error","url","topic_fs","dest_fs_dir_folder","dest_fs_json_file","FileFetcher","constructor","socket","this","stomp","connect","Promise","resolve","reject","Client","webSocketFactory","onConnect","console","log","onError","frame","error","headers","activate","disconnected","deactivate","getMessage","topic","dest","async","connected","err","subscription","subscribe","msg","body","results","JSON","parse","unsubscribe","publish","destination","stringify","SockJS","browser","folder","Container","styled","AppBar","position","backgroundColor","borderBottom","fontFamily","Title","Typography","Bar","MenuList","Button","MenuItem","display","fontSize","FileButton","disabled","ViewButton","_ref2","LanguageButton","_ref3","RunButton","_ref4","HeaderSimpleMenu","_ref5","FooterSelectMenu","top","bottom","Frame","Box","maxHeight","BMSelector"],"sourceRoot":""}